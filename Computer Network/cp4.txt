You are an expert in computer networks, technical writing, and web development, tasked with creating a detailed tutorial chapter for a blog series titled "Computer Networks: From Scratch to Mastery." The series is designed for CSE graduates and professionals, covering 12 chapters across 4 modules: Foundations of Networking, Protocols & Addressing, Advanced Networking, and Real-World Applications. Generate a comprehensive tutorial for Chapter 4, adhering to the following guidelines:

1. **Content Requirements**:
   - Provide an in-depth explanation of the chapter’s topics, including theoretical concepts, practical applications, and real-world examples, tailored for both beginners and advanced learners.
   - Cover the following subtopics thoroughly:
     - **IPv4 vs IPv6**: Explain the structure, address format, and limitations of IPv4 (32-bit, 4 octets, e.g., 192.168.1.1). Describe IPv6 (128-bit, hexadecimal, e.g., 2001:0db8::1), its advantages (larger address space, simplified header), and transition mechanisms (e.g., dual-stack, tunneling).
     - **Subnetting & Supernetting**: Detail subnetting (dividing a network into smaller subnetworks) with step-by-step examples (e.g., subnetting 192.168.1.0/24 into 4 subnets). Explain supernetting (combining networks, e.g., for route aggregation) with examples.
     - **IP Address Classes and Private vs. Public IPs**: Describe IPv4 address classes (A, B, C, D, E), their ranges, and uses. Differentiate private IPs (e.g., 10.0.0.0/8) for internal networks and public IPs for internet routing.
     - **CIDR (Classless Inter-Domain Routing)**: Explain CIDR notation (e.g., /24), its role in replacing classful addressing, and its use in efficient IP allocation.
     - **Address Resolution Protocol (ARP)**: Describe ARP’s role in mapping IP addresses to MAC addresses, including the ARP request/reply process and ARP table.
   - Define key terms (e.g., IP address, subnet mask, ARP) and explain their significance.
   - Break down complex concepts into clear, beginner-friendly explanations while maintaining technical depth for advanced learners.
   - Include at least two practical examples:
     - A step-by-step example, such as performing subnetting calculations or configuring IP addresses on a router in Cisco Packet Tracer.
     - A visual example using HTML canvas or HTML elements to illustrate a concept (e.g., a canvas-based diagram of a subnetted network, an IPv4 vs. IPv6 address structure, or an ARP request/reply process).
   - Highlight common pitfalls (e.g., incorrect subnet masks, ARP cache poisoning), troubleshooting tips (e.g., using `arp -a` to check ARP table), and best practices (e.g., using private IPs for internal networks).
   - Ensure content builds on Chapters 1 (Introduction to Computer Networks), 2 (Network Models & Standards), and 3 (Transmission Media & Hardware) and aligns with the module goal: "Master IP addressing, protocols, and data flow."

2. **Structure**:
   - **Introduction**: Outline the chapter’s objectives, importance in understanding IP addressing, and its role in the Protocols & Addressing module.
   - **Main Sections**: Organize content into logical sections with clear headings (H2, H3 in HTML) for each subtopic:
     - IPv4 vs IPv6: Structure and Evolution
     - Subnetting: Dividing Networks
     - Supernetting: Aggregating Routes
     - IP Address Classes and Private vs. Public IPs
     - CIDR: Modern IP Allocation
     - Address Resolution Protocol (ARP): Linking IPs to MACs
     - Practical Example 1: Subnetting or IP Configuration in Packet Tracer
     - Practical Example 2: Visualizing IP Addressing or ARP with HTML Canvas or HTML
   - **Summary**: Provide key takeaways, reinforcing learning objectives and summarizing key concepts.
   - **Further Reading**: List reputable resources (e.g., “Computer Networking: A Top-Down Approach” by Kurose and Ross, Cisco Networking Academy, RFC 791 for IPv4, RFC 2460 for IPv6).
   - **Navigation**: Include links to the landing page, previous chapter (Chapter 3), next chapter (Chapter 5), and all modules.

3. **Technical Accuracy**:
   - Ensure all information is factually correct and up-to-date as of May 18, 2025.
   - Reference standard protocols and standards (e.g., RFC 791 for IPv4, RFC 2460 for IPv6, RFC 826 for ARP).
   - Avoid outdated technologies unless relevant for context (e.g., classful addressing for historical purposes).
   - Use accurate terminology (e.g., “octet” for IPv4, “prefix” for CIDR, “MAC address” for ARP).

4. **Output Format**:
   - Generate content in valid HTML, styled exclusively with Tailwind CSS classes (CDN: https://cdn.tailwindcss.com).
   - **Prohibit inline CSS**: Do not use inline styles (e.g., style="...") under any circumstances.
   - Use semantic HTML tags (e.g., <section>, <article>, <h1>, <h2>, <p>, <ul>, <code>).
   - Ensure responsiveness for desktop and mobile devices using Tailwind’s responsive classes (e.g., sm:, md:, lg:).
   - Include a navigation bar linking to the landing page and all modules (Module 1: Foundations of Networking, Module 2: Protocols & Addressing, Module 3: Advanced Networking, Module 4: Real-World Applications).
   - Wrap code snippets (e.g., Packet Tracer commands, JavaScript for canvas) in <pre><code> tags with appropriate language classes (e.g., language-text, language-javascript).
   - For the canvas/HTML example, include JavaScript within a <script> tag to render a visual representation (e.g., drawing a subnetted network with nodes and subnets, an IPv4/IPv6 address structure, or an ARP request/reply flow). Use <canvas> or HTML elements (e.g., <div> or <svg> for subnets) styled with Tailwind classes.
   - Use Tailwind classes for consistent styling (e.g., bg-white, p-6, text-lg, rounded-lg, shadow-md, hover:bg-blue-700).
   - Structure the HTML with a header, navigation bar, main content, and footer, ensuring the output is ready for direct publishing on a blog platform.

5. **Canvas/HTML Example Guidelines**:
   - Create a visual example using HTML canvas or HTML elements to illustrate a concept from the chapter (e.g., a diagram of a subnetted network with multiple subnets, a comparison of IPv4 and IPv6 address formats, or an ARP request/reply process with nodes).
   - For canvas: Use JavaScript to draw shapes (e.g., rectangles for subnets, circles for devices, arrows for ARP requests) and label them (e.g., “Subnet 1”, “Router”).
   - For HTML elements: Use <div> or <svg> to represent subnets or addresses, styled with Tailwind classes for positioning and appearance.
   - Ensure the example is visually clear, with a brief explanation of the code and its relevance to the topic.
   - Include a fallback text description for accessibility (e.g., describing the subnet layout or ARP process).

6. **Tone and Style**:
   - Use a professional, engaging tone suitable for a technical tutorial series.
   - Define jargon clearly (e.g., subnet, CIDR, ARP) and maintain consistency in terminology across the series.
   - Write for clarity, avoiding ambiguity, and cater to both beginners and advanced learners.

7. **Chapter Details**:
   - Module: Module 2: Protocols & Addressing
   - Chapter Title: IP Addressing Basics
   - Chapter Number: Chapter 4
   - Topics to Cover:
     - IPv4: 32-bit structure, limitations, address format.
     - IPv6: 128-bit structure, advantages, transition mechanisms.
     - Subnetting: Dividing networks into smaller subnets with examples.
     - Supernetting: Combining networks for route aggregation with examples.
     - IP Address Classes: A, B, C, D, E, and their ranges.
     - Private vs. Public IPs: Internal vs. internet-routable addresses.
     - CIDR: Classless addressing, notation, and benefits.
     - Address Resolution Protocol (ARP): Mapping IPs to MAC addresses, request/reply process.
   - Learning Objectives:
     - Understand the differences between IPv4 and IPv6 addressing.
     - Perform subnetting and supernetting calculations with practical examples.
     - Identify IP address classes and distinguish private vs. public IPs.
     - Explain CIDR and its role in modern IP allocation.
     - Describe the ARP process and its importance in networking.
   - Module Goal: Master IP addressing, protocols, and data flow.

**Output**:
Provide the complete HTML content for Chapter 4, equivalent to a professional networking textbook chapter (minimum 1500 words). Ensure the content is comprehensive, technically accurate, styled with Tailwind CSS classes (no inline CSS), and ready for seamless integration into the blog series. Include two practical examples: (1) a step-by-step guide to subnetting or configuring IP addresses in Cisco Packet Tracer, and (2) a visual example using HTML canvas or HTML elements to illustrate a subnetted network, IP address structure, or ARP process. Include navigation links, text-based diagram descriptions, and ensure a cohesive learning experience.