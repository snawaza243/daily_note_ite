You are an expert in computer networks, technical writing, and web development, tasked with creating a detailed tutorial chapter for a blog series titled "Computer Networks: From Scratch to Mastery." The series is designed for CSE graduates and professionals, covering 12 chapters across 4 modules: Foundations of Networking, Protocols & Addressing, Advanced Networking, and Real-World Applications. Generate a comprehensive tutorial for Chapter 5, adhering to the following guidelines:

1. **Content Requirements**:
   - Provide an in-depth explanation of the chapter’s topics, including theoretical concepts, practical applications, and real-world examples, tailored for both beginners and advanced learners.
   - Cover the following subtopics thoroughly:
     - **HTTP/HTTPS, FTP, SMTP, DNS**:
       - **HTTP/HTTPS**: Explain Hypertext Transfer Protocol (HTTP) for web communication and HTTPS for secure communication (SSL/TLS). Cover request/response models and status codes (e.g., 200 OK, 404 Not Found).
       - **FTP**: Describe File Transfer Protocol for file sharing, including active vs. passive modes and security concerns.
       - **SMTP**: Detail Simple Mail Transfer Protocol for email transmission, including its role in email delivery.
       - **DNS**: Explain Domain Name System for translating domain names (e.g., google.com) to IP addresses, including DNS query types (A, CNAME) and hierarchy (root, TLD, authoritative servers).
     - **TCP vs UDP (Reliability vs Speed)**: Compare Transmission Control Protocol (TCP) for reliable, connection-oriented communication (e.g., error checking, retransmission) with User Datagram Protocol (UDP) for fast, connectionless communication. Discuss use cases (e.g., TCP for HTTP, UDP for video streaming).
     - **Protocol Ports and Services**: Explain port numbers (e.g., 80 for HTTP, 443 for HTTPS, 53 for DNS), well-known ports (0–1023), registered ports, and dynamic ports. Describe how ports identify services and enable multiplexing.
     - **Handshake Mechanisms in TCP**: Detail the TCP three-way handshake (SYN, SYN-ACK, ACK) for establishing connections and the four-way handshake for termination. Explain sequence numbers and acknowledgment mechanisms.
     - **Protocol Stack Interactions**: Describe how protocols at different OSI/TCP-IP layers interact (e.g., HTTP over TCP, TCP over IP, IP over Ethernet), emphasizing encapsulation and data flow.
     - **ICMP (Internet Control Message Protocol)**: Explain ICMP’s role in network diagnostics (e.g., ping, traceroute), including message types (e.g., Echo Request/Reply).
     - **Real-World Protocol Use Cases**: Provide examples of protocols in action (e.g., DNS resolving a website, HTTPS securing online banking, UDP in real-time gaming).
   - Define key terms (e.g., protocol, port, handshake, ICMP) and explain their significance.
   - Break down complex concepts into clear, beginner-friendly explanations while maintaining technical depth for advanced learners.
   - Include at least two practical examples:
     - A step-by-step example, such as analyzing HTTP traffic with Wireshark or configuring DNS in a Packet Tracer lab.
     - A visual example using HTML canvas or HTML elements to illustrate a concept (e.g., a canvas-based diagram of the TCP three-way handshake, a DNS query process, or protocol stack interactions).
   - Highlight common pitfalls (e.g., misconfigured ports, DNS cache poisoning), troubleshooting tips (e.g., using `nslookup` for DNS issues, checking TCP connections with `netstat`), and best practices (e.g., securing FTP with FTPS, using HTTPS for web traffic).
   - Ensure content builds on Chapters 1 (Introduction to Computer Networks), 2 (Network Models & Standards), 3 (Transmission Media & Hardware), and 4 (IP Addressing Basics) and aligns with the module goal: "Master IP addressing, protocols, and data flow."

2. **Structure**:
   - **Introduction**: Outline the chapter’s objectives, importance in understanding networking protocols, and its role in the Protocols & Addressing module.
   - **Main Sections**: Organize content into logical sections with clear headings (H2, H3 in HTML) for each subtopic:
     - Application Layer Protocols: HTTP/HTTPS, FTP, SMTP, DNS
     - Transport Layer Protocols: TCP vs UDP
     - Protocol Ports and Services: Identifying Network Services
     - TCP Handshake Mechanisms: Establishing and Terminating Connections
     - Protocol Stack Interactions: How Protocols Work Together
     - ICMP: Network Diagnostics and Control
     - Real-World Protocol Use Cases
     - Practical Example 1: Analyzing HTTP Traffic or Configuring DNS in Packet Tracer
     - Practical Example 2: Visualizing TCP Handshake or DNS Query with HTML Canvas or HTML
   - **Summary**: Provide key takeaways, reinforcing learning objectives and summarizing key concepts.
   - **Further Reading**: List reputable resources (e.g., “Computer Networking: A Top-Down Approach” by Kurose and Ross, Cisco Networking Academy, RFC 2616 for HTTP, RFC 1035 for DNS).
   - **Navigation**: Include links to the landing page, previous chapter (Chapter 4), next chapter (Chapter 6), and all modules.

3. **Technical Accuracy**:
   - Ensure all information is factually correct and up-to-date as of May 18, 2025.
   - Reference standard protocols and standards (e.g., RFC 2616 for HTTP, RFC 2818 for HTTPS, RFC 793 for TCP, RFC 792 for ICMP).
   - Avoid outdated technologies unless relevant for context (e.g., FTP without security for historical purposes).
   - Use accurate terminology (e.g., “segment” for TCP, “datagram” for UDP, “query” for DNS).

4. **Output Format**:
   - Generate content in valid HTML, styled exclusively with Tailwind CSS classes (CDN: https://cdn.tailwindcss.com).
   - **Prohibit inline CSS**: Do not use inline styles (e.g., style="...") under any circumstances.
   - Use semantic HTML tags (e.g., <section>, <article>, <h1>, <h2>, <p>, <ul>, <code>).
   - Ensure responsiveness for desktop and mobile devices using Tailwind’s responsive classes (e.g., sm:, md:, lg:).
   - Include a navigation bar linking to the landing page and all modules (Module 1: Foundations of Networking, Module 2: Protocols & Addressing, Module 3: Advanced Networking, Module 4: Real-World Applications).
   - Wrap code snippets (e.g., Wireshark commands, JavaScript for canvas) in <pre><code> tags with appropriate language classes (e.g., language-text, language-javascript).
   - For the canvas/HTML example, include JavaScript within a <script> tag to render a visual representation (e.g., drawing the TCP three-way handshake with nodes and arrows, a DNS query flow, or a protocol stack). Use <canvas> or HTML elements (e.g., <div> or <svg> for protocol interactions) styled with Tailwind classes.
   - Use Tailwind classes for consistent styling (e.g., bg-white, p-6, text-lg, rounded-lg, shadow-md, hover:bg-blue-700).
   - Structure the HTML with a header, navigation bar, main content, and footer, ensuring the output is ready for direct publishing on a blog platform.

5. **Canvas/HTML Example Guidelines**:
   - Create a visual example using HTML canvas or HTML elements to illustrate a concept from the chapter (e.g., a diagram of the TCP three-way handshake with client/server nodes, a DNS query process with servers, or a protocol stack showing HTTP over TCP over IP).
   - For canvas: Use JavaScript to draw shapes (e.g., circles for nodes, arrows for handshake messages, rectangles for protocol layers) and label them (e.g., “SYN”, “Client”).
   - For HTML elements: Use <div> or <svg> to represent nodes or layers, styled with Tailwind classes for positioning and appearance.
   - Ensure the example is visually clear, with a brief explanation of the code and its relevance to the topic.
   - Include a fallback text description for accessibility (e.g., describing the handshake or DNS query flow).

6. **Tone and Style**:
   - Use a professional, engaging tone suitable for a technical tutorial series.
   - Define jargon clearly (e.g., port, handshake, DNS) and maintain consistency in terminology across the series.
   - Write for clarity, avoiding ambiguity, and cater to both beginners and advanced learners.

7. **Chapter Details**:
   - Module: Module 2: Protocols & Addressing
   - Chapter Title: Key Networking Protocols
   - Chapter Number: Chapter 5
   - Topics to Cover:
     - HTTP/HTTPS: Web communication, request/response, security.
     - FTP: File transfer, active/passive modes, security concerns