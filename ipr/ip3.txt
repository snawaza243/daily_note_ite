**Role:** Cryptography Specialist and UI/UX Engineer  
**Task:** Create an interactive HTML tutorial for Chapter 3 with algorithm visualizations and attack simulations  
**Output Requirements:**  

1. **Technical Specifications:**  
   - Single HTML5 file with embedded Tailwind CSS  
   - JavaScript-powered algorithm animators  
   - Mermaid.js for cryptographic process flows  
   - MathJax for complex mathematical notation  
   - Canvas-based DES round visualizations  
   - Interactive RSA key generator  

2. **Content Structure:**  
```html
<!DOCTYPE html>
<html lang="en">
<head>
    <!-- Head with Tailwind, MathJax, Mermaid, CryptoJS -->
</head>
<body class="bg-gray-50">
    <header class="bg-rose-900 text-white p-6">
        <h1 class="text-3xl font-bold">Chapter 3: Encryption Algorithms</h1>
    </header>

    <main class="container mx-auto p-4">
        <!-- DES VISUAL WORKSHOP -->
        <section id="des" class="mb-12 p-6 bg-blue-50 rounded-xl">
            <h2 class="text-2xl font-semibold mb-4">Data Encryption Standard (DES)</h2>
            
            <div class="des-visualizer grid grid-cols-1 lg:grid-cols-2 gap-6">
                <div class="des-structure">
                    <h3 class="text-xl font-medium">64-bit Block Structure</h3>
                    <!-- Interactive bit grid -->
                    <div class="bit-grid grid grid-cols-8 gap-1 mt-4"></div>
                </div>
                <div class="des-rounds">
                    <h3 class="text-xl font-medium">16-Round Feistel Network</h3>
                    <div class="round-slider-container mt-4">
                        <input type="range" min="1" max="16" value="1" class="w-full" id="roundSlider">
                        <div id="roundVisualization" class="mt-4"></div>
                    </div>
                </div>
            </div>
            
            <!-- Strength/Weakness Comparison -->
            <div class="des-assessment grid grid-cols-1 md:grid-cols-2 gap-4 mt-8">
                <div class="strengths bg-green-100 p-4 rounded-lg">
                    <h4 class="font-bold">Strengths</h4>
                    <!-- List with icons -->
                </div>
                <div class="weaknesses bg-red-100 p-4 rounded-lg">
                    <h4 class="font-bold">Weaknesses</h4>
                    <!-- List with icons -->
                </div>
            </div>
        </section>

        <!-- DES BREAKING LAB -->
        <section id="breaking-des" class="mb-12 p-6 bg-yellow-50 rounded-xl">
            <h2 class="text-2xl font-semibold mb-4">Breaking DES</h2>
            
            <div class="attack-methods grid grid-cols-1 md:grid-cols-2 gap-6">
                <div class="brute-force">
                    <h3 class="text-xl font-medium">Brute Force Attack</h3>
                    <div class="attack-simulator mt-4">
                        <div class="progress-bar h-4 bg-gray-200 rounded-full">
                            <div id="bruteProgress" class="h-full bg-red-600 rounded-full"></div>
                        </div>
                        <button id="startBrute" class="mt-4 bg-red-500 text-white p-2">Start Attack (2<sup>56</sup> possibilities)</button>
                        <div id="bruteResult" class="mt-4"></div>
                    </div>
                </div>
                
                <div class="cryptanalysis">
                    <h3 class="text-xl font-medium">Differential Cryptanalysis</h3>
                    <div class="mermaid">
                        sequenceDiagram
                            Attacker->>Plaintexts: Select pairs with fixed difference
                            Plaintexts->>Ciphertexts: Encrypt
                            Attacker->>Ciphertexts: Analyze difference patterns
                            Attacker->>Key: Recover subkeys
                    </div>
                    <button id="demoCryptoanalysis" class="mt-4 bg-purple-500 text-white p-2">Simulate Attack</button>
                </div>
            </div>
        </section>

        <!-- RSA INTERACTIVE LABORATORY -->
        <section id="rsa" class="mb-12 p-6 bg-emerald-50 rounded-xl">
            <h2 class="text-2xl font-semibold mb-4">RSA Algorithm</h2>
            
            <div class="rsa-lab grid grid-cols-1 md:grid-cols-3 gap-4">
                <div class="key-generation">
                    <h3 class="text-lg font-medium">Key Generation</h3>
                    <div class="math-steps">
                        <p>1. Select primes \(p\) and \(q\)</p>
                        <p>2. Compute \(n = p \times q\)</p>
                        <p>3. Compute \(\phi(n) = (p-1)(q-1)\)</p>
                        <p>4. Choose \(e\) where \(1 < e < \phi(n)\)</p>
                        <p>5. Determine \(d = e^{-1} \mod \phi(n)\)</p>
                        <button id="generateKeys" class="mt-2 bg-green-600 text-white p-2">Generate Keys</button>
                        <div id="keyOutput" class="mt-4 font-mono text-sm"></div>
                    </div>
                </div>
                
                <div class="encryption">
                    <h3 class="text-lg font-medium">Encryption</h3>
                    <p>\( c = m^e \mod n \)</p>
                    <textarea id="rsaPlaintext" class="w-full border p-2 mt-2" placeholder="Enter message"></textarea>
                    <button id="encryptBtn" class="bg-blue-500 text-white p-2 mt-2">Encrypt</button>
                    <div id="ciphertextOutput" class="mt-4"></div>
                </div>
                
                <div class="decryption">
                    <h3 class="text-lg font-medium">Decryption</h3>
                    <p>\( m = c^d \mod n \)</p>
                    <button id="decryptBtn" class="bg-indigo-500 text-white p-2 mt-2">Decrypt</button>
                    <div id="plaintextOutput" class="mt-4"></div>
                </div>
            </div>
            
            <div class="rsa-security mt-6">
                <h3 class="text-xl font-medium">Security Considerations</h3>
                <!-- Factorability meter, key length recommendations -->
            </div>
        </section>

        <!-- PGP ARCHITECTURE DEMO -->
        <section id="pgp" class="mb-12 p-6 bg-cyan-50 rounded-xl">
            <h2 class="text-2xl font-semibold mb-4">PGP Architecture</h2>
            
            <div class="pgp-flow">
                <div class="mermaid">
                    graph LR
                        A[User] -->|Plaintext| B[Compression]
                        B --> C[Symmetric Encryption]
                        C --> D[Session Key]
                        D --> E[Asymmetric Encryption]
                        E --> F[Recipient's Public Key]
                        F --> G[Transmission]
                </div>
            </div>
            
            <div class="pgp-applications grid grid-cols-1 md:grid-cols-3 gap-4 mt-6">
                <!-- Cards for Email Security/File Encryption/Digital Signatures -->
            </div>
            
            <div class="email-demo border-2 border-gray-300 p-4 mt-6 rounded-lg">
                <h3 class="text-lg font-medium">PGP Email Simulation</h3>
                <!-- Interactive email encryption/decryption demo -->
            </div>
        </section>
    </main>

    <!-- ALGORITHM CHALLENGE ZONE -->
    <div class="algorithm-challenge fixed bottom-4 right-4 bg-white p-4 shadow-xl rounded-lg border-2 border-rose-600">
        <h3 class="font-bold text-lg mb-2">Crypto Challenges</h3>
        <!-- Interactive challenges: 
             - Break simplified DES 
             - Factor small RSA n
             - Detect PGP vulnerabilities -->
    </div>

    <script>
        // JavaScript implementations for:
        // - DES round visualizer
        // - Brute-force simulator
        // - RSA key generation/encryption/decryption
        // - PGP email simulation
    </script>
</body>
</html>
Content Generation Rules:

DES Section:
• Interactive 64-bit block manipulator
• Animated Feistel network with round slider
• Strength/weakness comparison with historical context

DES Breaking Lab:
• Brute-force progress visualizer with time estimates
• Differential cryptanalysis step-by-step animation
• DES vulnerability timeline (1998-2024)

RSA Laboratory:
• Prime number generator with Miller-Rabin visualization
• Live modular exponentiation calculator
• Key size vs security level infographic

PGP Section:
• Mermaid.js architecture diagram with hover details
• Email encryption simulation with key management
• Real-world use cases (Signal, ProtonMail)

Interactivity Requirements:

DES round-by-round visualization

Brute-force attack simulator with pause/resume

Differential cryptanalysis pattern analyzer

RSA key pair generator with prime selection

Live PGP encryption/decryption demo

Algorithm security challenge mini-games

Design Specifications:

Color scheme: Algorithm rose (#9f1239) + security blue (#1e40af)

Technical typography with monospace for crypto operations

Responsive grid layouts for algorithm comparisons

Canvas-based DES round animations

Animated mathematical transitions with MathJax

Dark mode with low-light considerations

Special Features:

DES Round Animator: Visualize substitution-permutation network

RSA Prime Visualizer: See how prime selection affects security

PGP Trust Web: Interactive web of trust diagram

Historical Context:
• 1998 EFF DES Cracker case study
• 2009 RSA-768 factorization milestone

Security Meters: Visual indicators for algorithm strength

Deliverable: Self-contained HTML file with functional cryptographic visualizations and simulations

Mathematical Notation Examples:

DES: 
f
(
R
,
K
)
=
P
(
S
(
E
(
R
)
⊕
K
)
)
f(R,K)=P(S(E(R)⊕K))

RSA: 
ϕ
(
n
)
=
(
p
−
1
)
(
q
−
1
)
ϕ(n)=(p−1)(q−1)

Modular exponentiation: 
c
=
m
e
m
o
d
 
 
n
c=m 
e
 modn

Mermaid Diagram Requirements:

Diagram
Code

graph TD
    A[Plaintext] --> B(DES Initial Permutation)
    B --> C(Left Block)
    B --> D(Right Block)
    D --> E(F Function)
    E --> F(Round Key)
    F --> G(XOR with Left Block)
    G --> H(New Right Block)
    C --> I(New Left Block)
    H & I --> J(Next Round)








Thi